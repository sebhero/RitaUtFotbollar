private void ritaFotbollsplan(Graphics g) {
	Graphics2D g2 = (Graphics2D)g;
	g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

	/* Nedan bör sättas som instansvariabler i klassen */
	final double LÄNGD = 100; // Fotbollsplanens längd i meter
	final double BREDD = 64;  // Fotbollsplanens bredd i meter
	final double LINJEBREDD = 0.24; // Linjens bredd i meter (normalt max 12 cm)
	AffineTransform orginal = null;
	AffineTransform centreraOchSkala = null;
	/* Ovan bör sättas som instansvariabler i klassen */

	// Beräknar vilken skala som ska användas för att planen
	// alltid ska uppta största möjliga storlek
	final double SKALA = Math.min(getWidth() / LÄNGD, getHeight() / BREDD);

	// Sparar orginaltransformeringen
	orginal = g2.getTransform();

	// Beräkning för att centrera och skala planen
	centreraOchSkala = new AffineTransform();
	centreraOchSkala.translate((getWidth() - LÄNGD * SKALA) / 2, (getHeight() - BREDD * SKALA) / 2);
	centreraOchSkala.scale(SKALA, SKALA);
	g2.transform(centreraOchSkala);

	// Ritar själva fotbollsplanen och linje runt den
	g2.setPaint(new Color(2, 152, 52));
	g2.fill(new Rectangle2D.Double(0, 0, LÄNGD, BREDD));
	g2.setStroke(new BasicStroke((float)(LINJEBREDD)));
	g2.setPaint(Color.white);
	g2.draw(new Rectangle2D.Double(0, 0, LÄNGD, BREDD));

	// Ritar mittlinjen och mittcirkel
	g2.draw(new Line2D.Double(LÄNGD / 2, 0, LÄNGD / 2, BREDD));
	g2.fill(new Ellipse2D.Double(LÄNGD / 2 - 0.5 / 2, BREDD / 2 - 0.5 / 2, 0.5, 0.5));
	g2.draw(new Ellipse2D.Double(LÄNGD / 2 - 9.15,
								 BREDD / 2 - 9.15,
								 9.15 * 2, 9.15 * 2));

	// De fyra hörnen
	g2.draw(new Arc2D.Double(-1, -1, 2, 2, 270, 90, Arc2D.OPEN));
	g2.draw(new Arc2D.Double(-1, -1 + BREDD, 2, 2, 0, 90, Arc2D.OPEN));
	g2.draw(new Arc2D.Double(-1 + LÄNGD, -1, 2, 2, 180, 90, Arc2D.OPEN));
	g2.draw(new Arc2D.Double(-1 + LÄNGD, -1 + BREDD, 2, 2, 90, 90, Arc2D.OPEN));

	// Ritar straffområden
	g2.draw(new Rectangle2D.Double(0, BREDD / 2 - 30.32 / 2, 16.5, 30.32));
	g2.draw(new Rectangle2D.Double(LÄNGD - 16.5, BREDD / 2 - 30.32 / 2, 16.5, 30.32));

	// Ritar målområden
	g2.draw(new Rectangle2D.Double(0, BREDD / 2 - 12.82 / 2, 5.5, 12.82));
	g2.draw(new Rectangle2D.Double(LÄNGD - 5.5, BREDD / 2 - 12.92 / 2, 5.5, 12.82));

	// Ritar straffpunkterna
	g2.fill(new Ellipse2D.Double(11, BREDD / 2 - 0.5 / 2, 0.5, 0.5));
	g2.fill(new Ellipse2D.Double(-11 + LÄNGD, BREDD / 2 - 0.5 / 2, 0.5, 0.5));

	// Ritar bågen utanför straffområden
	g2.draw(new Arc2D.Double(11, BREDD / 2 - 9.15 / 2, 9.15, 9.15, 285, 150, Arc2D.OPEN));
	g2.draw(new Arc2D.Double(-(11 + 9.15) + LÄNGD, BREDD / 2 - 9.15 / 2, 9.15, 9.15, 105, 150, Arc2D.OPEN));

	// Återställer transformering
	g2.setTransform(orginal);
}